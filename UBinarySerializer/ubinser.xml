<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ubinser</name>
    </assembly>
    <members>
        <member name="T:NullSoftware.Serialization.BinarySerializer">
            <summary>
            Base class for binary serializer.
            </summary>
        </member>
        <member name="P:NullSoftware.Serialization.BinarySerializer.Converters">
            <summary>
            Gets converters collection that used in current serializer.
            </summary>
            <remarks>
            Each converter is bonded to object type.
            </remarks>
        </member>
        <member name="M:NullSoftware.Serialization.BinarySerializer.#ctor(System.Collections.Generic.IDictionary{System.Type,NullSoftware.Serialization.IBinaryConverter})">
            <summary>
            Initializes default properties.
            </summary>
            <param name="converters">
            Instance of converters dictionary. 
            If argument is null will be used <see cref="M:NullSoftware.Serialization.BinarySerializer.InitializeDefaultConverters"/> method.
            </param>
        </member>
        <member name="M:NullSoftware.Serialization.BinarySerializer.InitializeDefaultConverters">
            <summary>
            Initializes default converters for current serializer.
            </summary>
            <returns>Default converters that will be used by current serializer.</returns>
        </member>
        <member name="T:NullSoftware.Serialization.BinarySerializer`1">
            <summary>
            Serializes and deserializes an specified object in binary format.
            </summary>
            <typeparam name="T">Type of object to serialize/deserialize.</typeparam>
        </member>
        <member name="P:NullSoftware.Serialization.BinarySerializer`1.DefaultEncoding">
            <summary>
            Gets or sets default encoding for current instance of serializer.
            </summary>
        </member>
        <member name="P:NullSoftware.Serialization.BinarySerializer`1.LatestGeneration">
            <summary>
            Gets a latest generation of field or property
            from current and child serializers using <see cref="T:NullSoftware.Serialization.BinIndexAttribute"/>.
            </summary>
        </member>
        <member name="P:NullSoftware.Serialization.BinarySerializer`1.IsClass">
            <summary>
            Gets a value indicating whether the current 
            serialization target is reference type.
            </summary>
        </member>
        <member name="M:NullSoftware.Serialization.BinarySerializer`1.#ctor(System.Collections.Generic.IDictionary{System.Type,NullSoftware.Serialization.IBinaryConverter},System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Type,NullSoftware.Serialization.IBinaryConverter}})">
            <summary>
            Initializes a new instance of the <see cref="T:NullSoftware.Serialization.BinarySerializer`1"/>
            with specified converters and custom converters.
            </summary>
            <param name="converters">Main converters dictionary, which must contains serializer converters.</param>
            <param name="customConverters">Custom converters, that will be merged with <paramref name="converters"/>.</param>
        </member>
        <member name="M:NullSoftware.Serialization.BinarySerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NullSoftware.Serialization.BinarySerializer`1"/>
            using default converters.
            </summary>
        </member>
        <member name="M:NullSoftware.Serialization.BinarySerializer`1.#ctor(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Type,NullSoftware.Serialization.IBinaryConverter}})">
            <summary>
            Initializes a new instance of the <see cref="T:NullSoftware.Serialization.BinarySerializer`1"/>
            with specified custom converters.
            </summary>
            <param name="customConverters">Custom serializer converters.</param>
        </member>
        <member name="M:NullSoftware.Serialization.BinarySerializer`1.IsListType(System.Type)">
            <summary>
            Determinants whether specified type is derived from list type.
            </summary>
            <param name="type">Type to check for list.</param>
            <returns>true is current type is derived from list type, otherwise false.</returns>
        </member>
        <member name="M:NullSoftware.Serialization.BinarySerializer`1.GetListItemType(System.Type)">
            <summary>
            Gets list element type from specified type.
            </summary>
            <param name="listType">Type that derived from <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>Element type of <see cref="T:System.Collections.Generic.IList`1"/>.</returns>
        </member>
        <member name="M:NullSoftware.Serialization.BinarySerializer`1.ToString">
            <inheritdoc/>
        </member>
        <member name="T:NullSoftware.Serialization.BinIndexAttribute">
            <summary>
            Specifies the index for binary serializaion.
            </summary>
        </member>
        <member name="P:NullSoftware.Serialization.BinIndexAttribute.Index">
            <summary>
            Gets index of current attribute.
            </summary>
        </member>
        <member name="P:NullSoftware.Serialization.BinIndexAttribute.Generation">
            <summary>
            Gets or sets member generation.
            </summary>
        </member>
        <member name="M:NullSoftware.Serialization.BinIndexAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NullSoftware.Serialization.BinIndexAttribute"/>
            with specified binary index.
            </summary>
            <param name="index">
            Binary index of member that will be used during serilization 
            or deserialization to place members in correct order.
            </param>
        </member>
        <member name="M:NullSoftware.Serialization.BinIndexAttribute.ToString">
            <inheritdoc/>
        </member>
        <member name="T:NullSoftware.Serialization.IBinaryConverter">
            <summary>
            Represents a methods which needed for binary serialization or deserialization.
            </summary>
        </member>
        <member name="M:NullSoftware.Serialization.IBinaryConverter.ToBytes(System.Reflection.MemberInfo,System.IO.BinaryWriter,System.Object,System.Object)">
            <summary>
            Converts value to bytes using <see cref="T:System.IO.BinaryWriter"/>.
            </summary>
            <param name="member">Field or property member info.</param>
            <param name="stream">Instance of <see cref="T:System.IO.BinaryWriter"/> that will be used to write bytes.</param>
            <param name="value">Value to convert into bytes.</param>
            <param name="parameter">Additional parameter.</param>
        </member>
        <member name="M:NullSoftware.Serialization.IBinaryConverter.ToValue(System.Reflection.MemberInfo,System.IO.BinaryReader,System.Object)">
            <summary>
            Converts bytes to value using <see cref="T:System.IO.BinaryReader"/>.
            </summary>
            <param name="member">Field or property member info.</param>
            <param name="stream">Instance of <see cref="T:System.IO.BinaryReader"/> that will be used to read bytes.</param>
            <param name="parameter">Additional parameter.</param>
            <returns>The value converted from bytes.</returns>
        </member>
        <member name="T:NullSoftware.Serialization.MemberInfoProxy">
            <summary>
            Wrapper for <see cref="T:System.Reflection.MemberInfo"/> 
            to provide easy access to get or set methods. 
            </summary>
            <remarks>
            This class is created to work with <see cref="T:System.Reflection.FieldInfo"/> or <see cref="T:System.Reflection.PropertyInfo"/>.
            </remarks>
        </member>
        <member name="P:NullSoftware.Serialization.MemberInfoProxy.MemberInfo">
            <summary>
            Gets wrapped member.
            </summary>
        </member>
        <member name="P:NullSoftware.Serialization.MemberInfoProxy.MemberTargetType">
            <summary>
            Gets original type of field or property.
            </summary>
        </member>
        <member name="P:NullSoftware.Serialization.MemberInfoProxy.SafeMemberTargetType">
            <summary>
            Gets safe type of field or property, that can be used by serializer.
            </summary>
        </member>
        <member name="P:NullSoftware.Serialization.MemberInfoProxy.IsReadOnly">
            <summary>
            Gets a value indicating whether the current member is readonly.
            </summary>
        </member>
        <member name="P:NullSoftware.Serialization.MemberInfoProxy.Name">
            <inheritdoc/>
        </member>
        <member name="P:NullSoftware.Serialization.MemberInfoProxy.DeclaringType">
            <inheritdoc/>
        </member>
        <member name="P:NullSoftware.Serialization.MemberInfoProxy.MemberType">
            <inheritdoc/>
        </member>
        <member name="P:NullSoftware.Serialization.MemberInfoProxy.ReflectedType">
            <inheritdoc/>
        </member>
        <member name="M:NullSoftware.Serialization.MemberInfoProxy.#ctor(System.Reflection.FieldInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:NullSoftware.Serialization.MemberInfoProxy"/> 
            based on <see cref="T:System.Reflection.FieldInfo"/>.
            </summary>
            <param name="field">Field Info.</param>
        </member>
        <member name="M:NullSoftware.Serialization.MemberInfoProxy.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:NullSoftware.Serialization.MemberInfoProxy"/>
            based on <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
            <param name="prop">Property Info.</param>
        </member>
        <member name="M:NullSoftware.Serialization.MemberInfoProxy.GetValue(System.Object)">
            <summary>
            Returns a field of property value of a specified object.
            </summary>
            <param name="obj">The object whose field/property value will be returned.</param>
            <returns>The field of property value of a specified object.</returns>
        </member>
        <member name="M:NullSoftware.Serialization.MemberInfoProxy.SetValue(System.Object,System.Object)">
            <summary>
            Sets the field or property value of a specified object.
            </summary>
            <param name="obj">The object whose field/property value will be set.</param>
            <param name="value">The new field or property value.</param>
        </member>
        <member name="M:NullSoftware.Serialization.MemberInfoProxy.GetSafeType(System.Type)">
            <summary>
            Gets safe type for serializer. 
            For enum type this method returns its underlying type.
            </summary>
            <param name="memberType">Type of member.</param>
            <returns>The serializer safe type.</returns>
        </member>
        <member name="M:NullSoftware.Serialization.MemberInfoProxy.GetCustomAttributes(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:NullSoftware.Serialization.MemberInfoProxy.GetCustomAttributes(System.Type,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:NullSoftware.Serialization.MemberInfoProxy.IsDefined(System.Type,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:NullSoftware.Serialization.MemberInfoProxy.ToString">
            <inheritdoc/>
        </member>
    </members>
</doc>
